-- -- TIMESTAMP-- phpMyAdmin SQL Dump
-- -- version 4.8.3
-- -- https://www.phpmyadmin.net/
-- --
-- -- Host: 127.0.0.1
-- -- Generation Time: Dec 12, 2018 at 12:50 PM
-- -- Server version: 10.1.37-MariaDB
-- -- PHP Version: 7.2.12
--
-- -- SET SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO';
-- -- SET AUTOCOMMIT = 0;
-- START TRANSACTION;
-- -- SET time_zone = '+00:00';
--
--
-- /*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
-- /*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
-- /*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
-- /*!40101 SET NAMES utf8mb4 */;
--
-- --
-- -- Database: oj
-- --
--
-- -- --------------------------------------------------------
--
-- --
-- -- Table structure for table questions
-- --
--
-- CREATE TABLE questions (
--   que_id serial PRIMARY KEY,
--   name VARCHAR (50) UNIQUE NOT NULL,
--   description TEXT NOT NULL,
--   inputformat TEXT  NOT NULL,
--   outputformat TEXT  NOT NULL,
--   constraints TEXT  NOT NULL,
--   examplein TEXT  NOT NULL,
--   exampleout TEXT  NOT NULL
-- );
--
-- --
-- -- Dumping data for table questions
-- --
--
-- INSERT INTO questions (name, description, inputformat, outputformat, constraints, examplein, exampleout) VALUES
-- ('Sum of Digits',
--  'You are given an integer N. Write a program to calculate the sum of all the digits of N.',
--  'The first line contains an integer T, total number of testcases. Then follow T lines, each line contains an integer N.',
--  'Calculate the sum of digits of N.',
--  '1 ≤ T ≤ 1000
--  1 ≤ N ≤ 1000000',
--  '3
--  12345
--  31203
--  2123',
--  '15
--  9
--  8'),
-- ('Small Factorial',
--  'Write a program to find the factorial value of any number entered by the user.',
--  'The first line contains an integer T, total number of testcases. Then follow T lines, each line contains an integer N.',
--  'Display the factorial of the given number N.',
--  '1 ≤ T ≤ 1000
--  0 ≤ N ≤ 20',
--  '3
--  3
--  4
--  5',
--  '6
--  24
--  120'),
-- ('Squares',
--  'Given a number, output its square i.e. N*N.',
--  'First line provides the number of testcases T. The next T lines contain a single integer N.',
--  'Output the square of N.',
--  '1 <= T <= 100
--  1 <= N <= 100',
--  '4
--  1
--  2
--  3
--  4',
--  '1
--  4
--  9
--  16'),
-- ('Sum of two numbers',
--  'Given a & b. Print their sum.',
--  'Each line contains two integers a & b.',
--  'Print a+b.',
--  '1 =< a <= b <= 100',
--  '2 3',
--  '5'),
-- ('Square Root',
--  'Given a number N find the square root of N.',
--  'A single line containing N.',
--  'The square root of N.',
--  '1 <= N <= 1000',
--  '100',
--  '10');

-- --------------------------------------------------------

--
-- Table structure for table userdetails
--

-- CREATE TABLE userdetails (
--   user_id serial PRIMARY KEY,
--   name TEXT NOT NULL,
--   age NUMERIC(11) NOT NULL,
--   gender TEXT NOT NULL,
--   country TEXT NOT NULL
-- );

--
-- Table structure for table ranks


-- CREATE TABLE ranks (
--   user_id serial PRIMARY KEY,
--   question_count NUMERIC(5) NOT NULL,
--   FOREIGN KEY (user_id) REFERENCES userdetails (user_id)
-- );

-- --------------------------------------------------------

--
-- Table structure for table solved
--

-- CREATE TABLE solved (
--   user_id serial,
--   que_id serial,
--   PRIMARY KEY (user_id,que_id),
--   FOREIGN KEY (que_id) REFERENCES questions (que_id),
--   FOREIGN KEY (user_id) REFERENCES userdetails (user_id)
-- );

-- --------------------------------------------------------

--
-- Table structure for table submissions
--

-- CREATE TABLE submissions (
--   time TIMESTAMP NOT NULL,
--   user_id serial,
--   que_id serial,
--   runtime FLOAT8 NOT NULL,
--   status TEXT NOT NULL,
--   PRIMARY KEY (time,user_id),
--   FOREIGN KEY (que_id) REFERENCES questions (que_id),
--   FOREIGN KEY (user_id) REFERENCES userdetails (user_id)
-- );

-- --------------------------------------------------------

--
-- Table structure for table testcases
--

-- CREATE TABLE testcases (
--   que_id serial,
--   input TEXT NOT NULL,
--   output TEXT NOT NULL,
--   PRIMARY KEY (que_id),
--   FOREIGN KEY (que_id) REFERENCES questions(que_id)
-- );

--
-- Dumping data for table testcases
--

-- INSERT INTO testcases (que_id, input, output) VALUES
-- (1,
-- '3
-- 12345
-- 31203
-- 2123',
-- '15
-- 9
-- 8'),
-- (2,
-- '3
-- 3
-- 4
-- 5',
-- '6
-- 24
-- 120'),
-- (3,
-- '10
-- 1
-- 2
-- 3
-- 4
-- 5
-- 6
-- 7
-- 8
-- 9
-- 10',
-- '1
-- 4
-- 9
-- 16
-- 25
-- 36
-- 49
-- 64
-- 81
-- 100'),
-- (4,
-- '15 19',
-- '34'),
-- (5,
-- '225',
-- '15');

-- --------------------------------------------------------

--
-- Table structure for table userlogin
--

-- CREATE TABLE userlogin (
--   user_id serial PRIMARY KEY,
--   username TEXT NOT NULL,
--   pass TEXT NOT NULL,
--   FOREIGN KEY (user_id) REFERENCES userdetails (user_id)
-- );
